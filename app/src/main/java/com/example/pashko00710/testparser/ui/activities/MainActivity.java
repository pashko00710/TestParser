package com.example.pashko00710.testparser.ui.activities;import android.Manifest;import android.content.pm.PackageManager;import android.support.v4.app.ActivityCompat;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.support.v4.content.ContextCompat;import android.support.v7.app.AppCompatActivity;import android.telephony.TelephonyManager;import com.example.pashko00710.testparser.R;import com.example.pashko00710.testparser.rest.RestService;import com.example.pashko00710.testparser.rest.model.ImeiData;import com.example.pashko00710.testparser.rest.model.ImeiModel;import com.example.pashko00710.testparser.ui.fragments.PeopleFragment_;import com.google.gson.Gson;import org.androidannotations.annotations.AfterViews;import org.androidannotations.annotations.Background;import org.androidannotations.annotations.Click;import org.androidannotations.annotations.EActivity;import java.util.ArrayList;@EActivity(R.layout.activity_main)public class MainActivity extends AppCompatActivity {    PeopleFragment_ peopleFragment;    @AfterViews    public void ready() {//        sendImei();        replaceFragment(peopleFragment = new PeopleFragment_());    }    //P.S. так бы кнопки вынес во фрагмент, но по дизайну    // не получилось такого сделать поэтому реализовал так    @Click(R.id.btn_details)    public void clickDetails() {        peopleFragment.clickDetails();    }    @Click(R.id.btn_fetch)    public void getPeoples() {        peopleFragment.loadRecordings();    }    @Override    public void onBackPressed() {        if (getSupportFragmentManager().getBackStackEntryCount() == 1){            finish();        }        else {            super.onBackPressed();        }    }    private void replaceFragment (Fragment fragment){        String backStateName =  fragment.getClass().getName();        String fragmentTag = backStateName;        FragmentManager manager = getSupportFragmentManager();        boolean fragmentPopped = manager.popBackStackImmediate (backStateName, 0);        if (!fragmentPopped && manager.findFragmentByTag(fragmentTag) == null) { //fragment not in back stack, create it.            FragmentTransaction ft = manager.beginTransaction();            ft.replace(R.id.main_container, fragment, fragmentTag);            ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);            ft.addToBackStack(backStateName);            ft.commit();        }    }    //Отправка imei на сервер    @Background    public void sendImei() {        checkPermissionReadPhoneState();        TelephonyManager telephonyManager = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);        String deviceImei = telephonyManager.getDeviceId();        String datalistStr = getData(deviceImei);//        datalistStr.replace("\\\"", "\"");        RestService restService = new RestService();        ImeiModel imeiModel = restService.sendImei(datalistStr);    }    private void checkPermissionReadPhoneState() {        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_PHONE_STATE}, 255);        }    }    public String getData(String deviceImei) {        ArrayList<String> listStr = new ArrayList<String>();        ImeiModel model = new ImeiModel();        ImeiData data = new ImeiData();        Gson gson = new Gson();        data.setImei(deviceImei);        data.setMessage("hello world");        model.setImeiData(data);        listStr.add(gson.toJson(model));        return String.valueOf(listStr);    }}