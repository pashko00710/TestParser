package com.example.pashko00710.testparser.database.model;import com.example.pashko00710.testparser.database.TestParserDataBase;import com.raizlabs.android.dbflow.annotation.Column;import com.raizlabs.android.dbflow.annotation.ConflictAction;import com.raizlabs.android.dbflow.annotation.PrimaryKey;import com.raizlabs.android.dbflow.annotation.Table;import com.raizlabs.android.dbflow.annotation.Unique;import com.raizlabs.android.dbflow.annotation.UniqueGroup;import com.raizlabs.android.dbflow.sql.language.SQLite;import com.raizlabs.android.dbflow.structure.BaseModel;import java.util.List;@Table(database = TestParserDataBase.class, uniqueColumnGroups = {@UniqueGroup(groupNumber = 1,uniqueConflict = ConflictAction.IGNORE)})public class People extends BaseModel {    @PrimaryKey(autoincrement = true)    long id;    @Unique(unique = false, uniqueGroups = 1)    @Column    String name;//    @Unique(unique = false, uniqueGroups = 1)//    @Column//    String surName;    public static List<People> getAllPeoples() {        return SQLite.select()        .from(People.class)        .queryList();    }    public static List<People> deleteAllPeoples() {        return SQLite.delete()        .from(People.class)        .queryList();    }    public long getId() {        return id;    }    public void setId(long id) {        this.id = id;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }//    public String getSurName() {//        return surName;//    }////    public void setSurName(String surName) {//        this.surName = surName;//    }}